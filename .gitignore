# Bazel
/bazel-*
/external/
.bazelrc.user
+ bazel.iml
+ bazel-bin
+ bazel-genfiles
+ bazel-out
+ bazel-testlogs

# Build outputs
/build/
/bin/
/lib/
compile_commands.json

# C++ specific
*.o
*.so
*.a
*.dylib
*.dll
*.exe
*.out

# Protocol Buffers
*.pb.h
*.pb.cc
*.pb.cpp

# IDE specific
.vscode/
.idea/
*.swp
*.swo
.clangd/
.cache/

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# ROS specific
/install/
+ /install_isolated/
+ /build_isolated/
/log/
*.bag
+ *.db3
+ *.mcap
+ .ros/

# Python (for any scripts)
__pycache__/
*.py[cod]
*$py.class
.Python
*.egg-info/

# Dependency directories
/third_party/downloads/
/vendor/

# Testing
/Testing/
*.test
*.gcno
*.gcda
*.gcov
+ test_*.pb
+ /TEST_TMPDIR/

# Documentation
/docs/_build/
/docs/api/
/docs/html/

# Temporary files
*.tmp
*.temp
*.log
core.*
### Automatically added by Hedron's Bazel Compile Commands Extractor: https://github.com/hedronvision/bazel-compile-commands-extractor
# Ignore the `external` link (that is added by `bazel-compile-commands-extractor`). The link differs between macOS/Linux and Windows, so it shouldn't be checked in. The pattern must not end with a trailing `/` because it's a symlink on macOS/Linux.
/external
# Ignore generated output. Although valuable (after all, the primary purpose of `bazel-compile-commands-extractor` is to produce `compile_commands.json`!), it should not be checked in.
/compile_commands.json
# Ignore the directory in which `clangd` stores its local index.
/.cache/
