workspace(name = "shadesmar")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

# Add bazel_features first
http_archive(
    name = "bazel_features",
    sha256 = "9fcb3d7cbe908772462aaa52f02b857a225910d30daa3c252f670e3af6d8036d",
    strip_prefix = "bazel_features-1.0.0",
    url = "https://github.com/bazel-contrib/bazel_features/releases/download/v1.0.0/bazel_features-v1.0.0.tar.gz",
)

# Rules for building C/C++ dependencies
http_archive(
    name = "rules_foreign_cc",
    url = "https://github.com/bazelbuild/rules_foreign_cc/archive/0.9.0.tar.gz",
    strip_prefix = "rules_foreign_cc-0.9.0",
)
load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")
rules_foreign_cc_dependencies()

# Load workspace rules
load("//tools/workspace:eigen.bzl", "eigen_repository")
load("//tools/workspace:gtsam.bzl", "gtsam_repository")
load("//tools/workspace:opencv.bzl", "opencv_repository")
load("//tools/workspace:boost.bzl", "boost_repository")
load("//tools/workspace:tbb.bzl", "tbb_repository")

# Add this near the top of your WORKSPACE file, before the platforms section
http_archive(
    name = "bazel_skylib",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
    ],
    sha256 = "74d544d96f4a5bb630d465ca8bbcfe231e3594e5aae57e1edbf17a6eb3ca2506",
)
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

# Add platform definitions
http_archive(
    name = "platforms",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/platforms/releases/download/0.0.7/platforms-0.0.7.tar.gz",
        "https://github.com/bazelbuild/platforms/releases/download/0.0.7/platforms-0.0.7.tar.gz",
    ],
    sha256 = "3a561c99e7bdbe9173aa653fd579fe849f1d8d67395780ab4770b1f381431d51",
)
register_execution_platforms("@platforms//:all")

# Protocol Buffers
http_archive(
    name = "com_google_protobuf",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v3.19.4.tar.gz"],
    strip_prefix = "protobuf-3.19.4",
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

# Google Test
http_archive(
    name = "com_google_googletest",
    urls = ["https://github.com/google/googletest/archive/release-1.11.0.tar.gz"],
    strip_prefix = "googletest-release-1.11.0",
)

# CUDA Support
http_archive(
    name = "local_cuda",
    build_file = "//third_party:cuda.BUILD",
    urls = ["https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run"],
    sha256 = "...",  # Add appropriate SHA
)

# JSON for Modern C++
http_archive(
    name = "nlohmann_json",
    build_file = "//third_party:json.BUILD",
    urls = ["https://github.com/nlohmann/json/releases/download/v3.11.2/json.tar.xz"],
    sha256 = "...",  # Add appropriate SHA
)

# ROS2 dependencies
http_archive(
    name = "com_github_mvukov_rules_ros2",
    sha256 = "32bc90fa947328dfc42f46242d3241ae930acd00a9ccbcbea64918aa6d94ba91",
    strip_prefix = "rules_ros2-19d0a447d5d1226897ae032ca6f31548c0b02075",
    url = "https://github.com/mvukov/rules_ros2/archive/19d0a447d5d1226897ae032ca6f31548c0b02075.tar.gz",
)

# Add Python rules (required by rules_ros2)
http_archive(
    name = "rules_python",
    sha256 = "84aec9e21cc56fbc7f1335035a71c850d1b9b5cc6ff497306f84cced9a769841",
    strip_prefix = "rules_python-0.23.1",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.23.1/rules_python-0.23.1.tar.gz",
)

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python3_10",
    python_version = "3.10",
)

# Load and call workspace rules
load("@com_github_mvukov_rules_ros2//repositories:repositories.bzl", "ros2_repositories")
ros2_repositories()

load("@com_github_mvukov_rules_ros2//repositories:deps.bzl", "ros2_deps")
ros2_deps()

# Python dependencies for ROS2
load("@rules_python//python:pip.bzl", "pip_parse")

pip_parse(
    name = "rules_ros2_pip_deps",
    requirements_lock = "@com_github_mvukov_rules_ros2//:requirements_lock.txt",
)

load("@rules_ros2_pip_deps//:requirements.bzl", "install_deps")
install_deps()

# Rerun SDK
http_archive(
    name = "rerun_sdk",
    build_file = "//third_party:rerun.BUILD",
    urls = ["https://github.com/rerun-io/rerun/releases/download/0.9.0/rerun_cpp_sdk_0.9.0.tar.gz"],
    sha256 = "...",  # Add appropriate SHA
)

# Initialize repositories
eigen_repository()
gtsam_repository()
opencv_repository()
boost_repository()
tbb_repository()

load("@com_github_mvukov_rules_ros2//repositories:defs.bzl", "ros2_local_repository")

ros2_local_repository(
    name = "ros2_humble",  # Note: changed from "ros2" to "ros2_humble"
    workspace_path = "/opt/ros/humble",
)
